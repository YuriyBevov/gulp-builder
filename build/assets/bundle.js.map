{"version":3,"file":"./bundle.js","mappings":"+YAAO,IAAMA,EAAb,WACE,WAAaC,GAAsB,WAAfC,EAAe,uDAAL,GAAK,+BAUtB,SAACC,GACP,EAAKC,SACOC,SAASC,cAAc,QAGzBC,MAAMC,SADZL,EACuB,SAEA,OAG1BM,QAAQC,MAAM,qEApBa,oBAwBvB,WACR,GAAG,EAAKN,SAAU,CACd,IAAMO,EAAoB,2EAEpBC,EAAwB,EAAKX,MAAMY,iBAAiBF,GAAmB,GACvEG,EAAmB,EAAKb,MAAMY,iBAAiBF,GAC/CI,EAAuBD,EAAiBA,EAAiBE,OAAS,GA0BxEX,SAASY,iBAAiB,WAxBF,SAApBC,EAAqBC,GACrB,IAAIC,EAA2B,QAAZD,EAAIE,KAA6B,IAAZF,EAAIE,IAE7B,WAAZF,EAAIE,KACHhB,SAASiB,oBAAoB,UAAWJ,GAGvCE,IAIDD,EAAII,SACAlB,SAASmB,gBAAkBZ,IAC3BG,EAAqBU,QACrBN,EAAIO,kBAGJrB,SAASmB,gBAAkBT,IAC3BH,EAAsBa,QACtBN,EAAIO,sBAOhBd,EAAsBa,aAEtBhB,QAAQC,MAAM,qEA5Da,uBAgEpB,WACR,EAAKN,UAEJ,EAAKuB,QAAQC,SAAQ,SAAAC,GACjBA,EAAOP,oBAAoB,QAAS,EAAKQ,cAG7CzB,SAASY,iBAAiB,QAAS,EAAKc,qBACxC1B,SAASY,iBAAiB,UAAW,EAAKe,eAE1C,EAAKC,MAAMhB,iBAAiB,QAAS,EAAKiB,kBAE1CzB,QAAQC,MAAM,qEA5Ea,kBAgFzB,WACH,EAAKN,UACJ,EAAK+B,cACL,EAAKC,YAAW,GAEhB/B,SAASiB,oBAAoB,QAAS,EAAKS,qBAC3C1B,SAASiB,oBAAoB,UAAW,EAAKU,eAE7C,EAAKC,MAAMX,oBAAoB,QAAS,EAAKY,iBAC7C,EAAKG,QAAQC,UAAUC,OAAO,aAC9B,EAAKtC,MAAMqC,UAAUC,OAAO,aAE5B,EAAKZ,QAAQC,SAAQ,SAAAC,GACjBA,EAAOZ,iBAAiB,QAAS,EAAKa,eAG1CrB,QAAQC,MAAM,qEAhGa,8BAoGb,SAACS,GAChB,EAAKf,SACDe,EAAIqB,SAAW,EAAKH,SACnB,EAAKI,UAGThC,QAAQC,MAAM,qEA1Ga,wBA8GnB,SAACS,GACV,EAAKf,SACY,WAAZe,EAAIE,KACJ,EAAKoB,UAGThC,QAAQC,MAAM,qEApHa,0BAwHjB,WACX,EAAKN,SACJ,EAAKqC,UAELhC,QAAQC,MAAM,qEA5Ha,oBAgIvB,SAACS,GACTA,EAAIO,iBACD,EAAKtB,UACJ,EAAK+B,cACL,EAAKC,YAAW,GAEhB,EAAKC,QAAQC,UAAUI,IAAI,aAC3B,EAAKzC,MAAMqC,UAAUI,IAAI,aACzB,EAAKC,eACL,EAAKC,aAELnC,QAAQC,MAAM,qEA1IlBmC,KAAKV,eAAejC,EAAQiC,aAC5BU,KAAK5C,MAAQA,EACb4C,KAAKC,GAAKD,KAAK5C,MAAM8C,aAAa,MAClCF,KAAKlB,QAAUtB,SAASQ,iBAAiB,uBAAyBgC,KAAKC,GAAK,MAC5ED,KAAKzC,UAAW,EAChByC,KAAKR,QAAUQ,KAAK5C,MAAM+C,WAC1BH,KAAKZ,MAAQY,KAAK5C,MAAMK,cAAc,iB,QAR5C,O,EAAA,G,EAAA,mBAgJE,WAAO,WACAuC,KAAKlB,SACJkB,KAAKzC,UAAW,EAEhByC,KAAKlB,QAAQC,SAAQ,SAAAC,GACjBA,EAAOZ,iBAAiB,QAAS,EAAKa,UAAW,EAAK7B,MAAO,EAAKoC,aAGtE5B,QAAQC,MAAM,mH,oEAxJxB,KCGaL,SAASQ,iBAAiB,UAEhCe,SAAQ,SAAA3B,GACX,IAAID,EAAMC,GAAOgD,W","sources":["webpack://gulp-template/./src/scripts/classes/Modal.js","webpack://gulp-template/./src/scripts/modules/testModule.js"],"sourcesContent":["export class Modal {\n  constructor( modal, options = {} ) {\n      this.isBodyLocked = options.isBodyLocked ? true : false,\n      this.modal = modal;\n      this.id = this.modal.getAttribute('id');\n      this.openers = document.querySelectorAll('[data-modal-anchor=\"' + this.id + '\"]');\n      this.isInited = false;\n      this.overlay = this.modal.parentNode;\n      this.close = this.modal.querySelector('.modal__close');\n  }\n\n  bodyLocker = (bool) => {\n      if(this.isInited) {\n          let body = document.querySelector('body');\n\n          if(bool) {\n              body.style.overflow = 'hidden';\n          } else {\n              body.style.overflow = 'auto';\n          }\n      } else {\n          console.error('Для инициализации используй new Modal(_modal-selector_).init()')\n      }\n  }\n\n  focusTrap = () => {\n      if(this.isInited) {\n          const focusableElements = 'button, [href], input, select, textarea, [tabindex]:not([tabindex=\"-1\"])';\n\n          const firstFocusableElement = this.modal.querySelectorAll(focusableElements)[0];\n          const focusableContent = this.modal.querySelectorAll(focusableElements);\n          const lastFocusableElement = focusableContent[focusableContent.length - 1];\n\n          let onBtnClickHandler = (evt) => {\n              let isTabPressed = evt.key === 'Tab' || evt.key === 9;\n\n              if(evt.key === 'Escape') {\n                  document.removeEventListener('keydown', onBtnClickHandler);\n              }\n\n              if (!isTabPressed) {\n                  return;\n              }\n\n              if (evt.shiftKey) {\n                  if (document.activeElement === firstFocusableElement) {\n                      lastFocusableElement.focus();\n                      evt.preventDefault();\n                  }\n              } else {\n                  if (document.activeElement === lastFocusableElement) {\n                      firstFocusableElement.focus();\n                      evt.preventDefault();\n                  }\n              }\n          }\n\n          document.addEventListener('keydown', onBtnClickHandler);\n\n          firstFocusableElement.focus();\n      } else {\n          console.error('Для инициализации используй new Modal(_modal-selector_).init()')\n      }\n  }\n\n  addListeners = () => {\n      if(this.isInited) {\n\n          this.openers.forEach(opener => {\n              opener.removeEventListener('click', this.openModal);\n          })\n\n          document.addEventListener('click', this.closeByOverlayClick);\n          document.addEventListener('keydown', this.closeByEscBtn);\n\n          this.close.addEventListener('click', this.closeByBtnClick);\n      } else {\n          console.error('Для инициализации используй new Modal(_modal-selector_).init()')\n      }\n  }\n\n  refresh = () => {\n      if(this.isInited) {\n          this.isBodyLocked ?\n          this.bodyLocker(false) : null;\n\n          document.removeEventListener('click', this.closeByOverlayClick);\n          document.removeEventListener('keydown', this.closeByEscBtn);\n\n          this.close.removeEventListener('click', this.closeByBtnClick);\n          this.overlay.classList.remove('is-opened');\n          this.modal.classList.remove('is-active');\n\n          this.openers.forEach(opener => {\n              opener.addEventListener('click', this.openModal);\n          })\n      } else {\n          console.error('Для инициализации используй new Modal(_modal-selector_).init()')\n      }\n  }\n\n  closeByOverlayClick = (evt) => {\n      if(this.isInited) {\n          if(evt.target === this.overlay) {\n              this.refresh();\n          }\n      } else {\n          console.error('Для инициализации используй new Modal(_modal-selector_).init()')\n      }\n  }\n\n  closeByEscBtn = (evt) => {\n      if(this.isInited) {\n          if (evt.key === \"Escape\") {\n              this.refresh();\n          }\n      } else {\n          console.error('Для инициализации используй new Modal(_modal-selector_).init()')\n      }\n  }\n\n  closeByBtnClick = () => {\n      if(this.isInited) {\n          this.refresh();\n      } else {\n          console.error('Для инициализации используй new Modal(_modal-selector_).init()')\n      }\n  }\n\n  openModal = (evt) => {\n      evt.preventDefault();\n      if(this.isInited) {\n          this.isBodyLocked ?\n          this.bodyLocker(true) : null;\n\n          this.overlay.classList.add('is-opened');\n          this.modal.classList.add('is-active');\n          this.addListeners();\n          this.focusTrap();\n      } else {\n          console.error('Для инициализации используй new Modal(_modal-selector_).init()')\n      }\n  }\n\n  init() {\n      if(this.openers) {\n          this.isInited = true;\n\n          this.openers.forEach(opener => {\n              opener.addEventListener('click', this.openModal, this.modal, this.overlay);\n          })\n      } else {\n          console.error('Не добавлена кнопка открытия модального окна, либо в ней не прописан аттр-т: data-modal-anchor={modal-id} ')\n      }\n  };\n}\n","import { Modal } from '../classes/Modal.js';\n\n\nlet modals = document.querySelectorAll('.modal');\n\nmodals.forEach(modal => {\n    new Modal(modal).init();\n})\n\n"],"names":["Modal","modal","options","bool","isInited","document","querySelector","style","overflow","console","error","focusableElements","firstFocusableElement","querySelectorAll","focusableContent","lastFocusableElement","length","addEventListener","onBtnClickHandler","evt","isTabPressed","key","removeEventListener","shiftKey","activeElement","focus","preventDefault","openers","forEach","opener","openModal","closeByOverlayClick","closeByEscBtn","close","closeByBtnClick","isBodyLocked","bodyLocker","overlay","classList","remove","target","refresh","add","addListeners","focusTrap","this","id","getAttribute","parentNode","init"],"sourceRoot":""}